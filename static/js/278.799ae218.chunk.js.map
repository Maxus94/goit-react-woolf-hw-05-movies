{"version":3,"file":"static/js/278.799ae218.chunk.js","mappings":"iOAiDA,UA7Ce,WACb,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwCC,EAAAA,EAAAA,IAAgB,IAAGC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAApDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAsBjB,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,IAAiBvB,GAAY,KAAD,EAAzCmB,EAAIC,EAAAI,KACVnB,EAAUc,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAExBO,QAAQC,IAAGR,EAAAM,IAAQ,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,kBAEtB,kBAPiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQZC,EAAQvB,EAAawB,IAAI,UAC/BD,GAAS/B,EAAc+B,GACvBlB,GACF,GAAG,CAACL,EAAcT,KAEhBkC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,OAAO,GAAGC,SAtBC,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjB/B,EAAgB,CAAEgC,OAAQF,EAAKG,SAASC,KAAKC,QAC7CL,EAAKM,OACP,EAiB2CX,SAAA,EACrCY,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,UACxBF,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQb,SAAC,eAExBY,EAAAA,EAAAA,KAAA,MAAAZ,SACG/B,EAAO8C,KAAI,SAAAC,GAAK,OACfJ,EAAAA,EAAAA,KAAA,MAAAZ,UACEY,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAM9C,GAAWwB,SACxDgB,EAAMO,kBAFFP,EAAMI,GAIV,QAKf,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { getMoviesByQuery } from 'api/movies';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchText, setSearchText] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    setSearchParams({ search: form.elements.text.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const data = await getMoviesByQuery(searchText);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const query = searchParams.get('search');\n    query && setSearchText(query);\n    searchMovies();\n  }, [searchParams, searchText]);\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMoviesByQuery","sent","results","t0","console","log","stop","apply","arguments","query","get","_jsxs","children","action","onSubmit","evt","preventDefault","form","currentTarget","search","elements","text","value","reset","_jsx","type","name","map","movie","Link","to","concat","id","state","from","original_title"],"sourceRoot":""}